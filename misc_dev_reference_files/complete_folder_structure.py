import os

root_directory = r"C:\Users\lnoni\OneDrive\Documentos\GITHUB REPOS\AGARTHA\AGARTHA-AI-PROJECT\Agartha.AI\Agartha.AI"

folders_and_files = [
    'MemoryHandling/BufferMemory/VectorEmbedding/',
    'MemoryHandling/SummaryMemory/DocumentChunking/',
    'MemoryHandling/BufferWindowMemory/Context-awareRetrieval/',
    'MemoryHandling/KnowledgeGraphMemory/ExternalKnowledgeBase/',
    'MemoryHandling/TokenManagement/',
    'GameSystemResources/save_states/',
    'GameSystemResources/',
    'GameSystemResources/fixed_variants/',
    'GameSystemResources/dynamic_variants/',
    'GameSystemResources/AgentAccess/current_info.txt',
    'GameSystemResources/AgentAccess/past_info.log',
    'GameSystemResources/StaticInformation/current_static_info.txt',
    'GameSystemResources/StaticInformation/past_static_info.log',
    'GameSystemResources/GameRules/core_rules.txt',
    'GameSystemResources/GameRules/custom_rules.txt',
    'GameSystemResources/GameState/current_game_state.txt',
    'GameSystemResources/GameState/past_game_states.log',
    'GameSystemResources/Miscellaneous/lore_background.txt',
    'GameSystemResources/Miscellaneous/world_history.txt',
    'blueprints/character_creation/',
    'blueprints/mandala_elemental_skill_tree/',
    'blueprints/profession_skill_tree/',
    'models/character.py',
    'models/elemental_skills.py',
    'models/profession_skills.py',
    'models/chat_ui.py',
    'models/user.py',
    'prompts/character_prompts.py',
    'prompts/elemental_prompts.py',
    'prompts/profession_prompts.py',
    'prompts/chat_ui_prompts.py',
    'services/character_services.py',
    'services/elemental_services.py',
    'services/profession_services.py',
    'services/chat_ui_services.py',
    'services/user_services.py',
    'static/css/',
    'static/js/',
    'static/images/character_avatars/',
    'static/images/elemental_icons/',
    'static/images/profession_icons/',
    'static/gifs/',
    'static/videos/',
    'static/audios/',
    'templates/character_creation.html',
    'templates/mandala_elemental_skill_tree.html',
    'templates/profession_skill_tree.html',
    'templates/character_details.html',
    'templates/chat_ui.html',
    'templates/login.html',
    'templates/register.html',
    'templates/popups/dice_animation.html',
    'templates/popups/character_popup.html',
    'tests/character_tests.py',
    'tests/elemental_tests.py',
    'tests/profession_tests.py',
    'tests/chat_ui_tests.py',
    'tests/user_tests.py',
    'tests/mock_data/user-input/',
    'tests/mock_data/master-input/',
    'tests/mock_data/system-input/',
    'tests/mock_data/agent-input/',
    'views/character_views.py',
    'views/elemental_views.py',
    'views/profession_views.py',
    'views/chat_ui_views.py',
    'views/user_views.py',
    'middleware/authentication/',
    'middleware/error_handling/',
    'middleware/pre_post_request_ops/',
    'database/schemas/',
    'database/migrations/',
    'database/seeds/',
    'utils/',
    'api/',
    'logging/',
    'security/encryption/',
    'security/token_generation/',
    'security/other_security_tasks/',
    'plugins_or_extensions/',
    'UserManagement/login/',
    'UserManagement/register/',
    'UserManagement/session/',
    'UserManagement/cache/',
    'UserManagement/profile/avatars/',
    'UserManagement/profile/achievements/',
    'UserManagement/feedback/bug_reports/',
    'UserManagement/feedback/user_feedback/',
    'MasterAI/CommandOutput/Agents/set/version.txt',
    'MasterAI/CommandOutput/Agents/set/fixed_setting.txt',
    'MasterAI/CommandOutput/Agents/set/current_setting.txt',
    'MasterAI/CommandOutput/Agents/set/past_settings.log',
    'MasterAI/CommandOutput/Agents/set/future_settings.txt',
    "MasterAI/LangChain/",
    "MasterAI/Pinecone/",
    "MasterAI/CommandOutput/Agents/lor/fixed_lore.txt",
    "MasterAI/CommandOutput/Agents/lor/current_lore.txt",
    "MasterAI/CommandOutput/Agents/cam/fixed_events.txt",
    "MasterAI/CommandOutput/Agents/cam/current_events.txt",
    "MasterAI/CommandOutput/Agents/cam/past_events.log",
    "MasterAI/CommandOutput/Agents/cam/future_events.txt",
    "MasterAI/CommandOutput/Agents/tes/sample_tests.txt",
    "MasterAI/CommandOutput/Agents/tes/current_tests.txt",
    "MasterAI/CommandOutput/Agents/tes/past_tests.log",
    "MasterAI/CommandOutput/Agents/tes/future_tests.txt",
    "MasterAI/CommandOutput/Agents/itens/sample_items.txt",
    "MasterAI/CommandOutput/Agents/itens/current_items.txt",
    "MasterAI/CommandOutput/Agents/itens/past_items.log",
    "MasterAI/CommandOutput/Agents/itens/future_items.txt",
    "MasterAI/CommandOutput/Agents/music/fixed_music.txt",
    "MasterAI/CommandOutput/Agents/opo/fixed_opponents.txt",
    "MasterAI/CommandOutput/Agents/opo/current_opponents.txt",
    "MasterAI/CommandOutput/Agents/opo/past_opponents.log",
    "MasterAI/CommandOutput/Agents/opo/future_opponents.txt",
    "MasterAI/CommandOutput/Agents/ali/fixed_allies.txt",
    "MasterAI/CommandOutput/Agents/ali/current_allies.txt",
    "MasterAI/CommandOutput/Agents/ali/past_allies.log",
    "MasterAI/CommandOutput/Agents/ali/future_allies.txt",
    "MasterAI/CommandOutput/Agents/ski/sample_skills.txt",
    "MasterAI/CommandOutput/Agents/ski/current_skills.txt",
    "MasterAI/CommandOutput/Agents/ski/past_skills.log",
    "MasterAI/CommandOutput/Agents/ski/future_skills.txt",
    "MasterAI/CommandOutput/Agents/ach/sample_achievements.txt",
    "MasterAI/CommandOutput/Agents/ach/current_achievements.txt",
    "MasterAI/CommandOutput/Agents/ach/past_achievements.log",
    "MasterAI/CommandOutput/Agents/ach/future_achievements.txt",
    "MasterAI/CommandOutput/Agents/sav/current_save.txt",
    "MasterAI/CommandOutput/Agents/env/fixed_environment.txt",
    "MasterAI/CommandOutput/Agents/env/current_environment.txt",
    "MasterAI/CommandOutput/Agents/env/past_environments.log",
    "MasterAI/CommandOutput/Agents/env/future_environments.txt",
    "MasterAI/CommandOutput/Agents/puz/sample_puzzles.txt",
    "MasterAI/CommandOutput/Agents/puz/current_puzzles.txt",
    "MasterAI/CommandOutput/Agents/puz/past_puzzles.log",
    "MasterAI/CommandOutput/Agents/puz/future_puzzles.txt",
    "MasterAI/CommandOutput/Agents/tra/sample_trades.txt",
    "MasterAI/CommandOutput/Agents/tra/past_trades.log",
    "MasterAI/CommandOutput/Agents/tra/future_trades.txt",
    "MasterAI/CommandOutput/Agents/mag/sample_spells.txt",
    "MasterAI/CommandOutput/Agents/mag/current_spells.txt",
    "MasterAI/CommandOutput/Agents/mag/past_spells.log",
    "MasterAI/CommandOutput/Agents/mag/future_spells.txt",
    'MasterAI/ConsistencyChecker/',
    'MasterAI/FallbackMechanism/',
    '.gitignore',
    'Agartha.mermaid',
    'CODE_OF_CONDUCT.md',
    'LICENSE.txt',
    'README.md',
    'app.py',
    'config.py',
    'requirements.txt',
        'MemoryHandling/BufferMemory/VectorEmbedding/.gitkeep',
    'MemoryHandling/SummaryMemory/DocumentChunking/.gitkeep',
    'MemoryHandling/BufferWindowMemory/Context-awareRetrieval/.gitkeep',
    'MemoryHandling/KnowledgeGraphMemory/ExternalKnowledgeBase/.gitkeep',
    'MemoryHandling/TokenManagement/.gitkeep',
    'GameSystemResources/save_states/.gitkeep',
    'GameSystemResources/.gitkeep',
    'GameSystemResources/fixed_variants/.gitkeep',
    'GameSystemResources/dynamic_variants/.gitkeep',
    'blueprints/character_creation/.gitkeep',
    'blueprints/mandala_elemental_skill_tree/.gitkeep',
    'blueprints/profession_skill_tree/.gitkeep',
    'static/css/.gitkeep',
    'static/js/.gitkeep',
    'static/images/character_avatars/.gitkeep',
    'static/images/elemental_icons/.gitkeep',
    'static/images/profession_icons/.gitkeep',
    'static/gifs/.gitkeep',
    'static/videos/.gitkeep',
    'static/audios/.gitkeep',
    'templates/popups/.gitkeep',
    'tests/mock_data/user-input/.gitkeep',
    'tests/mock_data/master-input/.gitkeep',
    'tests/mock_data/system-input/.gitkeep',
    'tests/mock_data/agent-input/.gitkeep',
    'middleware/authentication/.gitkeep',
    'middleware/error_handling/.gitkeep',
    'middleware/pre_post_request_ops/.gitkeep',
    'database/schemas/.gitkeep',
    'database/migrations/.gitkeep',
    'database/seeds/.gitkeep',
    'utils/.gitkeep',
    'api/.gitkeep',
    'logging/.gitkeep',
    'security/encryption/.gitkeep',
    'security/token_generation/.gitkeep',
    'security/other_security_tasks/.gitkeep',
    'plugins_or_extensions/.gitkeep',
    'UserManagement/login/.gitkeep',
    'UserManagement/register/.gitkeep',
    'UserManagement/session/.gitkeep',
    'UserManagement/cache/.gitkeep',
    'UserManagement/profile/avatars/.gitkeep',
    'UserManagement/profile/achievements/.gitkeep',
    'UserManagement/feedback/bug_reports/.gitkeep',
    'UserManagement/feedback/user_feedback/.gitkeep',
    'MasterAI/LangChain/.gitkeep',
    'MasterAI/Pinecone/.gitkeep',
    'MasterAI/ConsistencyChecker/.gitkeep',
    'MasterAI/FallbackMechanism/.gitkeep'
]

for item in folders_and_files:
    path = os.path.join(root_directory, item)
    if item.endswith('/'):
        os.makedirs(path, exist_ok=True)
    else:
        parent_dir = os.path.dirname(path)
        os.makedirs(parent_dir, exist_ok=True)  # Ensure the directory exists
        if not os.path.exists(path):
            with open(path, 'w') as f:
                pass
